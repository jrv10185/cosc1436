CONSOLE OUTPUT/TESTING RESULTS:

      FIRST RUN
Enter an odd size from 3 to 15: 10
error: that's even! 
enter a valid size: 1
error: that's less than the min!
enter a valid size: 17
error: thats greater than the max!
enter a valid size: 2
error: that's even! that's less than the min!
enter a valid size: 16
error: that's even! thats greater than the max!
enter a valid size: 3
-----
|*0*|
|0*0|
|*0*|
-----

	 SECOND RUN

Enter an odd size from 3 to 15: 13
---------------
|*0*0*0*0*0*0*|
|0*0*0*0*0*0*0|
|*0*0*0*0*0*0*|
|0*0*0*0*0*0*0|
|*0*0*0*0*0*0*|
|0*0*0*0*0*0*0|
|*0*0*0*0*0*0*|
|0*0*0*0*0*0*0|
|*0*0*0*0*0*0*|
|0*0*0*0*0*0*0|
|*0*0*0*0*0*0*|
|0*0*0*0*0*0*0|
|*0*0*0*0*0*0*|
---------------



C++ SOURCE CODE: 

//Description of Program: Table of stars and zeros
//Author: James Vaughan
//Section 1436.900
//Date: 10/03/2022

#include <iostream>

using namespace std;

int main() {
    
    //Constants
    const int MIN = 3;
    const int MAX = 15;
    
    cout << "Enter an odd size from " << MIN << " to " <<MAX <<": ";
    int size =0;
    
    while(true){
        cin >> size;
        //Break out of loop if size meets requirements
        if(size >= MIN && size <=MAX && size%2!=0){
            break;
        }
        
        cout << "error: ";
        if(size%2 == 0){
            cout <<"that's even! "; 
        }
        if(size<MIN){
            cout<<"that's less than the min!";
        }
        if(size>MAX){
            cout<<"thats greater than the max!";
        }
        
        cout <<endl<<"enter a valid size: ";
    }

    //draw the chart
    for (int i = 0; i < size+2; i++) {
        for (int j = 0; j < size+2; j++) {
            if (i==0 || i==size+1){
                cout<<"-";
                continue;
            }
            if (j==0 || j== size+1){
                cout<<"|";
                continue;
            }
            cout << ((i+j)%2 ? "0" : "*");
        }
        cout<<endl;
        
    }
    return 0;
}
